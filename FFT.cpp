/* ----------------------------------------------------------------------
 * Copyright (C) 2010-2012 ARM Limited. All rights reserved.
 *
 * $Date:         17. January 2013
 * $Revision:     V1.4.0
 *
 * Project:       CMSIS DSP Library
 * Title:	     arm_fft_bin_example_f32.c
 *
 * Description:   Example code demonstrating calculation of Max energy bin of
 *                frequency domain of input signal.
 *
 * Target Processor: Cortex-M4/Cortex-M3
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *   - Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   - Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *   - Neither the name of ARM LIMITED nor the names of its contributors
 *     may be used to endorse or promote products derived from this
 *     software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * -------------------------------------------------------------------- */

/**
 * @ingroup groupExamples
 */

/**
 * @defgroup FrequencyBin Frequency Bin Example
 *
 * \par Description
 * \par
 * Demonstrates the calculation of the maximum energy bin in the frequency
 * domain of the input signal with the use of Complex FFT, Complex
 * Magnitude, and Maximum functions.
 *
 * \par Algorithm:
 * \par
 * The input test signal contains a 10 kHz signal with uniformly distributed
 * white noise. Calculating the FFT of the input signal will give us the maximum
 * energy of the bin corresponding to the input frequency of 10 kHz.
 *
 * \par Block Diagram:
 * \image html FFTBin.gif "Block Diagram"
 * \par
 * The figure below shows the time domain signal of 10 kHz signal with
 * uniformly distributed white noise, and the next figure shows the input
 * in the frequency domain. The bin with maximum energy corresponds to 10 kHz
 * signal. \par \image html FFTBinInput.gif "Input signal in Time domain" \image
 * html FFTBinOutput.gif "Input signal in Frequency domain"
 *
 * \par Variables Description:
 * \par
 * \li \c testInput_f32_10khz points to the input data
 * \li \c testOutput points to the output data
 * \li \c fftSize length of FFT
 * \li \c ifftFlag flag for the selection of CFFT/CIFFT
 * \li \c doBitReverse Flag for selection of normal order or bit reversed order
 * \li \c refIndex reference index value at which maximum energy of bin ocuurs
 * \li \c testIndex calculated index value at which maximum energy of bin ocuurs
 *
 * \par CMSIS DSP Software Library Functions Used:
 * \par
 * - arm_cfft_f32()
 * - arm_cmplx_mag_f32()
 * - arm_max_f32()
 *
 * <b> Refer  </b>
 * \link arm_fft_bin_example_f32.c \endlink
 *
 */

/** \example arm_fft_bin_example_f32.c
 */

#include "mbed.h"
#include <cstdio>
#include "arm_math.h"
#include "arm_common_tables.h"
// #include "arm_const_structs.h"

#define SEMIHOSTING
#if defined(SEMIHOSTING)
#include <stdio.h>
#endif

#define TEST_LENGTH_SAMPLES 2048

/* -------------------------------------------------------------------
 * External Input and Output buffer Declarations for FFT Bin Example
 * ------------------------------------------------------------------- */
// extern float32_t testInput_f32_10khz[TEST_LENGTH_SAMPLES];
static float32_t testInput_f32_10khz[TEST_LENGTH_SAMPLES] = {1.54416, 0, 3.434751, 0, 5.46733, 0, 7.119146, 0, 7.278511, 0, 3.855508, 0, -5.965909, 0, -25.321297, 0, -57.097229, 0, -103.595314, 0, -165.695389, 0, -242.654922, 0, -331.938721, 0, -429.341553, 0, 362.772644, 0, 421.878906, 0, 331.302887, 0, 196.904739, 0, 135.092896, 0, 84.04718, 0, 36.198586, 0, 9.085206, 0, 43.616249, 0, 25.519814, 0, 13.801403, 0, -10.932461, 0, -19.576248, 0, 66.419884, 0, 90.016129, 0, 91.221878, 0, 171.685074, 0, 181.641632, 0, 122.188263, 0, -21.449568, 0, -9.643902, 0, -168.977264, 0, -166.450729, 0, 57.893009, 0, 7.188421, 0, 23.407339, 0, 3.636793, 0, 1.109973, 0, 172.082443, 0, 157.578033, 0, 88.309906, 0, 86.806755, 0, -28.191771, 0, 127.355469, 0, 140.777084, 0, 122.055511, 0, 125.325325, 0, 12.821899, 0, -295.160706, 0, -335.019836, 0, -317.516388, 0, -379.690704, 0, -284.646423, 0, 719.919495, 0, 672.977356, 0, 484.324799, 0, 471.064758, 0, 288.155823, 0, -99.78035, 0, -82.96077, 0, -383.703064, 0, -373.802551, 0, -563.874329, 0, 117.072624, 0, 370.899567, 0, 366.311798, 0, 451.520935, 0, 463.372772, 0, 45.250771, 0, -72.492378, 0, -40.947292, 0, -65.841125, 0, -45.667027, 0, -270.946991, 0, -183.775681, 0, -203.872131, 0, 9.353143, 0, -22.916313, 0, 316.974701, 0, 327.772247, 0, 321.266968, 0, 334.584534, 0, 363.552368, 0, -80.479515, 0, -65.728729, 0, 7.331422, 0, 42.464954, 0, 124.757095, 0, -28.066978, 0, -12.672375, 0, 54.567482, 0, 7.64022, 0, -79.512955, 0, -234.727234, 0, -202.880737, 0, -81.320152, 0, -123.477142, 0, -175.020309, 0, -254.524857, 0, 123.691078, 0, 142.141754, 0, 40.860729, 0, 62.194191, 0, -21.142548, 0, 366.022949, 0, 418.688507, 0, 395.915314, 0, 190.327332, 0, 210.061829, 0, -60.146816, 0, 20.581968, 0, 72.657806, 0, 146.494598, 0, -153.7771, 0, -119.867073, 0, -109.731331, 0, -104.573761, 0, -169.385513, 0, 79.622177, 0, 48.149277, 0, -66.318092, 0, 8.825157, 0, -17.101107, 0, 525.528503, 0, 269.652832, 0, 293.148651, 0, 150.649612, 0, 214.900253, 0, 60.875107, 0, 6.711395, 0, 112.480995, 0, 55.295559, 0, 160.366959, 0, -197.577408, 0, -199.464401, 0, -137.210205, 0, -244.933578, 0, -228.587341, 0, -266.966431, 0, 37.102058, 0, -16.03336, 0, 5.043734, 0, -84.717545, 0, -94.619873, 0, 122.457977, 0, 2.396379, 0, -82.414124, 0, -194.841309, 0, -251.246643, 0, 670.479736, 0, 559.770935, 0, 538.873657, 0, 494.197968, 0, 528.59375, 0, -195.087494, 0, -213.727051, 0, -150.375076, 0, -83.128403, 0, -49.705055, 0, -292.44101, 0, -259.917633, 0, -302.86557, 0, -208.585571, 0, -277.011902, 0, 425.109985, 0, 512.190552, 0, 474.803131, 0, 508.781158, 0, 522.807373, 0, 68.14856, 0, -88.282578, 0, -4.656345, 0, -95.865166, 0, 8.761508, 0, 1.06541, 0, 79.299835, 0, 179.019791, 0, 145.568451, 0, 113.290382, 0, -422.530457, 0, -376.854156, 0, -150.708649, 0, -145.005493, 0, 15.634106, 0, -6.298357, 0, -58.795704, 0, -58.431507, 0, -136.768219, 0, -111.76001, 0, 239.740295, 0, 150.053009, 0, 134.700729, 0, 53.748787, 0, -179.866486, 0, 218.745895, 0, 172.330612, 0, 294.35144, 0, 275.676727, 0, 137.217194, 0, 18.873217, 0, 37.599976, 0, 110.087029, 0, 136.393051, 0, -49.203682, 0, 98.496704, 0, 100.783806, 0, -195.059402, 0, -642.587341, 0, -675.450073, 0, 735.601257, 0, 337.401337, 0, 305.006775, 0, 199.149551, 0, 197.20665, 0, 148.860641, 0, 128.638428, 0, 191.159027, 0, 253.236435, 0, 347.248199, 0, -52.587933, 0, -102.579582, 0, -2.594098, 0, -260.235992, 0, -176.21106, 0, 12.733908, 0, -113.557083, 0, -61.363163, 0, 61.739277, 0, 98.531448, 0, 309.261383, 0, -51.907593, 0, -34.450893, 0, -253.097855, 0, -167.689087, 0, -185.734406, 0, 6.645534, 0, -5.881683, 0, -76.088066, 0, -106.992119, 0, -209.364624, 0, 35.105484, 0, 72.746529, 0, -43.775181, 0, -32.838509, 0, -126.099625, 0, 751.748718, 0, 412.47345, 0, 389.1185, 0, 422.140442, 0, 438.718689, 0, -239.355606, 0, -316.193787, 0, -288.040863, 0, -198.073883, 0, -190.776245, 0, 115.784676, 0, 171.01033, 0, 145.510239, 0, 32.59586, 0, 8.126072, 0, 4.884302, 0, 163.769714, 0, 314.154785, 0, 340.495972, 0, 277.684265, 0, 53.951946, 0, 107.217262, 0, -105.178978, 0, -61.923344, 0, -272.370575, 0, -112.175591, 0, -125.529602, 0, -161.034119, 0, -210.934448, 0, -429.399231, 0, 237.346313, 0, 183.703934, 0, 664.301575, 0, 645.14502, 0, 586.243652, 0, -229.749054, 0, -184.473785, 0, 116.966339, 0, 174.284622, 0, 273.353424, 0, -289.821655, 0, -284.172363, 0, -493.137909, 0, -539.00946, 0, -624.468628, 0, 429.956451, 0, 494.020416, 0, 420.894318, 0, 454.8349, 0, 421.040558, 0, 181.792374, 0, 95.574707, 0, 143.809128, 0, 141.869217, 0, 231.269791, 0, -192.19339, 0, -11.693623, 0, 105.176964, 0, 253.61171, 0, 364.715881, 0, -249.019821, 0, -300.370178, 0, -232.783295, 0, -225.767471, 0, -207.518585, 0, -14.606062, 0, -67.789352, 0, -127.057732, 0, -223.401794, 0, -311.190552, 0, -340.672882, 0, 632.040161, 0, 559.686279, 0, 380.38089, 0, 299.558899, 0, 282.583771, 0, -16.469109, 0, -168.966827, 0, -148.126465, 0, 48.488369, 0, 71.425568, 0, -46.009258, 0, 16.035318, 0, 20.782915, 0, 37.866539, 0, 27.23287, 0, -53.437721, 0, -9.322889, 0, -45.002594, 0, -1.135508, 0, -48.233154, 0, -7.076752, 0, 45.418037, 0, 7.805475, 0, 139.252502, 0, 405.952057, 0, 411.230713, 0, 225.757935, 0, 261.43808, 0, 127.740417, 0, -188.304871, 0, -136.261673, 0, -126.860893, 0, -135.15097, 0, -111.72924, 0, 89.870354, 0, 29.008465, 0, 12.806847, 0, -90.180519, 0, -117.728073, 0, 22.83634, 0, 136.66301, 0, 122.563499, 0, 378.935974, 0, 383.496979, 0, 253.436523, 0, -105.272171, 0, -79.001465, 0, -292.591614, 0, -259.802155, 0, 271.000122, 0, 152.569412, 0, 188.872467, 0, 178.529892, 0, 212.049515, 0, 46.852333, 0, -202.999878, 0, -190.987823, 0, -282.923431, 0, -297.967834, 0, 111.237564, 0, 44.940098, 0, 56.474781, 0, -3.397692, 0, 56.479408, 0, -6.045292, 0, 275.499298, 0, 172.884171, 0, 133.371185, 0, -37.764015, 0, -52.337627, 0, 187.39473, 0, 299.489166, 0, 322.567657, 0, 392.476837, 0, -241.523987, 0, -197.552582, 0, -11.998874, 0, 32.598995, 0, 147.627914, 0, -50.726696, 0, -20.166061, 0, 3.215801, 0, 20.966362, 0, -3.778596, 0, -18.611515, 0, -18.632147, 0, 36.900299, 0, 24.394669, 0, 1.618463, 0, 31.856588, 0, -40.359333, 0, -73.170929, 0, 0.533517, 0, -33.344139, 0, 199.641251, 0, 161.237106, 0, 142.234421, 0, 147.999023, 0, 142.289062, 0, 151.357681, 0, -13.211116, 0, -14.431684, 0, -109.902374, 0, -122.651947, 0, 25.535114, 0, -22.032953, 0, -58.56945, 0, -1.893805, 0, -39.856728, 0, 144.55397, 0, 259.201691, 0, 254.18222, 0, 427.086243, 0, 459.04422, 0, -46.834145, 0, -62.223946, 0, 17.944756, 0, 102.945213, 0, 214.830902, 0, -111.362762, 0, -14.476071, 0, -53.04776, 0, 35.084023, 0, 100.402145, 0, -137.081146, 0, -76.403107, 0, -87.661507, 0, -53.644615, 0, -60.787437, 0, -59.441265, 0, -116.630852, 0, -146.996674, 0, -197.286377, 0, -109.9366, 0, -185.980011, 0, 230.610458, 0, 169.100067, 0, 79.903366, 0, 1.353483, 0, -76.176079, 0, 226.999084, 0, 198.847336, 0, 159.756485, 0, 141.943832, 0, 261.039764, 0, 177.000122, 0, 69.997009, 0, -54.018463, 0, -49.327713, 0, -97.585632, 0, -58.146446, 0, -80.063507, 0, -69.082596, 0, -108.069893, 0, -114.364662, 0, 229.204529, 0, 196.143356, 0, 281.483032, 0, 276.906403, 0, 405.8638, 0, 87.070984, 0, 133.48941, 0, 41.307995, 0, 104.868141, 0, 21.128685, 0, -205.300903, 0, -156.240753, 0, -95.453407, 0, -75.511772, 0, 18.435564, 0, 3.207029, 0, -24.157328, 0, -116.191803, 0, -161.475647, 0, -122.251999, 0, 299.739105, 0, 279.775482, 0, 248.743988, 0, 173.946716, 0, 169.044983, 0, -20.742735, 0, 94.324692, 0, 132.98674, 0, 162.809113, 0, 219.781128, 0, -4.153177, 0, -40.663849, 0, 10.442707, 0, -46.746281, 0, -26.139462, 0, -321.335327, 0, -179.225494, 0, -230.270691, 0, -234.996964, 0, -326.389618, 0, 177.402756, 0, 242.297089, 0, 143.128693, 0, 322.546692, 0, 260.095947, 0, 398.991608, 0, 305.250275, 0, 331.892914, 0, 238.52919, 0, 244.426773, 0, -53.055145, 0, 62.572418, 0, -6.173507, 0, 119.38636, 0, 129.562195, 0, -249.541824, 0, -151.66748, 0, -149.60321, 0, -87.754623, 0, -109.562332, 0, -90.022278, 0, -103.836639, 0, -125.583206, 0, -163.167068, 0, -61.615067, 0, -124.536346, 0, 264.348877, 0, 136.882019, 0, 60.700138, 0, -103.810272, 0, -170.07663, 0, 243.438828, 0, 245.209076, 0, 210.786118, 0, 236.381531, 0, 199.164551, 0, 97.649124, 0, -58.596664, 0, -64.293007, 0, -62.732288, 0, -46.248268, 0, -30.706406, 0, -40.337639, 0, 108.768829, 0, 96.073845, 0, 69.595467, 0, 111.687447, 0, 108.600639, 0, 158.534363, 0, 162.77919, 0, 202.331299, 0, -153.309799, 0, -153.864395, 0, -109.161201, 0, -122.387764, 0, 10.189882, 0, 141.140839, 0, 113.791222, 0, 71.797943, 0, 51.657959, 0, 12.352726, 0, 242.631729, 0, 259.982971, 0, 260.902161, 0, 209.428772, 0, 272.261444, 0, -95.619331, 0, -71.915611, 0, 14.615839, 0, 60.656513, 0, 143.196823, 0, -166.268875, 0, -125.708023, 0, -72.485741, 0, -49.464745, 0, -24.983866, 0, -125.935593, 0, -58.187252, 0, -81.045425, 0, -95.640808, 0, -150.461472, 0, 170.300079, 0, 9.347216, 0, -81.868576, 0, -144.627182, 0, -239.666733, 0, -170.791443, 0, 500.198059, 0, 440.992096, 0, 515.190308, 0, 492.514557, 0, 365.991791, 0, -159.706787, 0, -382.19516, 0, -366.543365, 0, -175.71907, 0, 177.071106, 0, 190.812225, 0, 216.895035, 0, 237.668945, 0, 150.878632, 0, 19.278315, 0, 66.449768, 0, 216.378967, 0, 272.550476, 0, 283.914459, 0, -452.00708, 0, -418.28717, 0, -256.012512, 0, -247.708847, 0, 52.46701, 0, 42.250927, 0, 415.061005, 0, 251.975296, 0, 236.846924, 0, 8.73628, 0, -8.568526, 0, -109.377846, 0, -178.631607, 0, -218.173553, 0, -252.724503, 0, -203.772018, 0, 323.648529, 0, 277.6026, 0, 225.97731, 0, 188.762863, 0, 138.403275, 0, 261.896271, 0, 279.289459, 0, 152.982162, 0, 196.389725, 0, 66.431961, 0, -213.893906, 0, -176.284286, 0, -116.752266, 0, -107.921829, 0, -144.356674, 0, -2.996163, 0, -42.278923, 0, -18.956457, 0, -67.13681, 0, 75.739738, 0, 303.221252, 0, 294.751862, 0, 365.691437, 0, 405.764771, 0, 492.6763, 0, -28.208769, 0, 67.904167, 0, -42.461143, 0, -122.987778, 0, 
-47.026627, 0, -343.30658, 0, -335.875824, 0, -346.90036, 0, -300.012451, 0, -369.002014, 0, 197.826401, 0, 220.631912, 0, 119.807442, 0, 223.213043, 0, 143.886093, 0, 331.053955, 0, 300.243683, 0, 281.614868, 0, 202.460144, 0, 206.487137, 0, -98.498596, 0, -157.903931, 0, -164.439529, 0, -297.251221, 0, -322.984924, 0, -218.508957, 0, 387.603668, 0, 350.492767, 0, 448.787262, 0, 412.755035, 0, 556.610535, 0, -9.119286, 0, -735.407471, 0, -791.53656, 0, -1255.00415, 0, 850.096313, 0, 803.014771, 0, 774.165527, 0, 771.00531, 0, 527.25824, 0, -262.464996, 0, -173.117828, 0, 398.043701, 0, 511.041229, 0, 624.597412, 0, -731.456238, 0, -686.024963, 0, -959.369873, 0, -980.784851, 0, -681.046509, 0, 928.831177, 0, 871.655823, 0, 889.481323, 0, 859.815979, 0, 732.522217, 0, -441.330475, 0, -421.722961, 0, -490.263245, 0, -463.679657, 0, -391.389618, 0, 335.696991, 0, 475.301849, 0, 506.346893, 0, 510.366364, 0, 561.540466, 0, -166.738571, 0, -229.231201, 0, -163.001572, 0, -155.965118, 0, -113.636795, 0, -99.382423, 0, -148.588913, 0, -175.421112, 0, -197.567642, 0, -264.71637, 0, 289.471436, 0, 242.271042, 0, 156.563019, 0, 36.612125, 0, -32.568508, 0, 154.041397, 0, 341.275055, 0, 315.324371, 0, 316.952545, 0, 313.103821, 0, -174.051163, 0, -145.994492, 0, -127.453896, 0, -146.732239, 0, -155.734848, 0, 511.691101, 0, 578.526489, 0, 529.422058, 0, 617.35321, 0, -133.294052, 0, -310.032898, 0, -246.081238, 0, -501.409729, 0, -492.083069, 0, -741.665649, 0, 99.837723, 0, 33.764423, 0, 248.230347, 0, 181.57193, 0, 544.708862, 0, 517.259094, 0, 519.790039, 0, 279.854462, 0, 324.274353, 0, 126.59462, 0, -517.985718, 0, -487.003662, 0, -332.196533, 0, -348.706116, 0, -275.298462, 0, 36.7486, 0, -22.714504, 0, 193.772552, 0, 705.252563, 0, 689.77887, 0, 507.32431, 0, 161.649094, 0, 204.505447, 0, -8.001048, 0, 25.991713, 0, -747.221924, 0, -680.716553, 0, -713.263794, 0, -137.262589, 0, -194.898956, 0, 983.597229, 0, 763.966675, 0, 744.212036, 0, 537.415833, 0, 560.802917, 0, -446.915039, 0, -418.53418, 0, -384.903046, 0, -294.433075, 0, -290.985748, 0, -322.362, 0, 117.235855, 0, 96.719536, 0, 617.093323, 0, 803.941162, 0, 543.899963, 0, 138.170853, 0, -147.924469, 0, -105.400177, 0, -371.972382, 0, -291.895538, 0, -285.669281, 0, -103.364098, 0, -136.968857, 0, 222.126694, 0, 199.600998, 0, 139.384796, 0, 109.415848, 0, 63.578613, 0, 250.449005, 0, 197.954971, 0, 204.866043, 0, 172.910263, 0, 212.701584, 0, 197.381866, 0, 98.157585, 0, 150.945496, 0, -114.999634, 0, -82.179932, 0, -504.164337, 0, -141.09903, 0, -143.095367, 0, -145.458267, 0, -278.193573, 0, 939.355347, 0, 820.987793, 0, 437.355255, 0, 476.022003, 0, 28.68825, 0, -728.430847, 0, -735.096191, 0, -543.26123, 0, -613.21582, 0, -593.404297, 0, 410.608246, 0, 283.16925, 0, 646.938477, 0, 546.880737, 0, 728.41272, 0, 242.818756, 0, 233.506577, 0, 234.814392, 0, 266.185425, 0, -76.491051, 0, -634.521545, 0, -601.559692, 0, 75.84024, 0, 98.520882, 0, 750.094849, 0, 38.759926, 0, 93.769447, 0, 427.64325, 0, 479.543427, 0, 588.186829, 0, 157.768829, 0, -368.38031, 0, -274.905121, 0, -547.036987, 0, -517.980774, 0, 46.683128, 0, -747.560852, 0, -821.109802, 0, 447.085266, 0, 346.204742, 0, 864.451416, 0, 551.405762, 0, 483.545105, 0, -373.311157, 0, -405.028778, 0, 803.112976, 0, -24.836609, 0, -27.060764, 0, -433.260681, 0, -431.797028, 0, 440.274017, 0, 405.323059, 0, 399.934875, 0, 366.123413, 0, 343.650909, 0, -786.23468, 0, -695.050354, 0, -252.695465, 0, -155.749786, 0, 264.685089, 0, 554.733887, 0, 528.079407, 0, 587.429932, 0, 610.782104, 0, 242.828186, 0, -1.39813, 0, 82.868622, 0, -246.049835, 0, -165.071976, 0, -496.313141, 0, 249.695099, 0, 268.150665, 0, -512.567993, 0, -537.447449, 0, -231.968628, 0, 443.852051, 0, 404.498383, 0, 333.410736, 0, 317.290314, 0, 323.421539, 0, 208.477722, 0, 223.605682, 0, -173.393661, 0, -165.027664, 0, -110.091324, 0, -545.103821, 0, -573.006348, 0, 96.176361, 0, 619.851135, 0, 601.009338, 0, 231.834213, 0, 255.67453, 0, 303.119476, 0, 414.255066, 0, 499.627563, 0, 30.808168, 0, -467.748383, 0, -395.210052, 0, -250.497879, 0, -226.99704, 0, -629.411682, 0, -7.453518, 0, -55.53849, 0, 536.067017, 0, 469.039032, 0, 133.641846, 0, -6.789241, 0, -48.088711, 0, -71.243256, 0, -69.714706, 0, 512.868347, 0, 432.394989, 0, 509.773193, 0, 490.771942, 0, 363.418671, 0, -204.229263, 0, -422.2258, 0, -420.005524, 0, -345.794434, 0, -96.225243, 0, -158.780197, 0, -165.29747, 0, -49.301121, 0, -94.964134, 0, 46.760784, 0, 276.203674, 0, 224.607437, 0, 155.08931, 0, 122.884827, 0, 115.183884, 0, 113.061707, 0, 112.219131, 0, 19.460333, 0, 24.574232, 0, 15.312532, 0, -38.295826, 0, -43.529881, 0, -173.776398, 0, -188.029907, 0, 31.190498, 0, 420.528961, 0, 401.756073, 0, 7.287161, 0, -84.736336, 0, -97.449394, 0, -86.850746, 0, 61.558338, 0, 58.18845, 0, 197.561432, 0, 200.075119, 0, 172.934677, 0, 13.243504, 0, 23.782885, 0, -83.492828, 0, -68.347176, 0, 61.800613, 0, 98.855743, 0, 120.018227, 0, 126.605736, 0, 149.677872, 0, 44.85247, 0, -44.606121, 0, -27.34915, 0, -32.08757, 0, -30.109886, 0, -67.213432, 0, -52.303921, 0, -85.483025, 0, -85.57663, 0, -140.646652, 0, 243.764374, 0, 156.325806, 0, -26.166054, 0, -87.471916, 0, -112.365097, 0, 431.122009, 0, 405.983307, 0, 285.969421, 0, 291.452789, 0, 82.617416, 0, -69.356728, 0, -34.81879, 0, -1.658048, 0, 32.401627, 0, -91.494179, 0, 20.5746, 0, 27.968891, 0, 43.023781, 0};
static float32_t testOutput[TEST_LENGTH_SAMPLES / 2];

/* ------------------------------------------------------------------
 * Global variables for FFT Bin Example
 * ------------------------------------------------------------------- */
uint32_t fftSize = TEST_LENGTH_SAMPLES / 2; //1024;
uint32_t ifftFlag = 0;
uint32_t doBitReverse = 1;
arm_cfft_instance_f32 varInstCfftF32;

/* Reference index at which max energy of bin ocuurs */
uint32_t refIndex = 213, testIndex = 0;

/* ----------------------------------------------------------------------
 * Max magnitude FFT Bin test
 * ------------------------------------------------------------------- */

int32_t main(void) {

    arm_status status;
    float32_t maxValue;

    const arm_cfft_instance_f32 arm_cfft_sR_f32_len1024 = {
        1024, twiddleCoef_1024, armBitRevIndexTable1024, ARMBITREVINDEXTABLE1024_TABLE_LENGTH
    };
    varInstCfftF32 = arm_cfft_sR_f32_len1024;

    /* Process the data through the CFFT/CIFFT module */
    arm_cfft_f32(&varInstCfftF32, testInput_f32_10khz, ifftFlag, doBitReverse);

    /* Process the data through the Complex Magnitude Module for
    calculating the magnitude at each bin */
    printf("\n%d\n", varInstCfftF32.fftLen);
    arm_cmplx_mag_f32(testInput_f32_10khz, testOutput, fftSize);

    for (int i = 0; i < varInstCfftF32.fftLen; i++) {
        printf("%f, ", testOutput[i]);
    }    

    /* Calculates maxValue and returns corresponding BIN value */
    arm_max_f32(testOutput, fftSize, &maxValue, &testIndex);

    status = (testIndex != refIndex) ? ARM_MATH_TEST_FAILURE : ARM_MATH_SUCCESS;

    if (status != ARM_MATH_SUCCESS) {
    #if defined(SEMIHOSTING)
        printf("FAILURE\n");
    #else
        while (1)
        ; /* main function does not return */
    #endif
    } else {
    #if defined(SEMIHOSTING)
        printf("SUCCESS\n");
    #else
        while (1)
        ; /* main function does not return */
    #endif
  }
}

/** \endlink */